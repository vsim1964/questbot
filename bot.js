require('dotenv').config();
const { Telegraf } = require("telegraf");
const { OpenAI } = require("openai");
const express = require("express");
const fetch = require("node-fetch");

const BOT_TOKEN = process.env.BOT_TOKEN;
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;
const CHANNEL_ID = process.env.CHANNEL_ID;
const PORT = process.env.PORT || 8080;
const WEBHOOK_URL = `https://questbot-production.up.railway.app/webhook/${BOT_TOKEN}`;

if (!BOT_TOKEN || !OPENAI_API_KEY || !CHANNEL_ID) {
	console.error("–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!");
	process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ ID –∫–∞–Ω–∞–ª–∞
if (!CHANNEL_ID.startsWith('-100')) {
	console.warn(`‚ö†Ô∏è ID –∫–∞–Ω–∞–ª–∞ ${CHANNEL_ID} –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º. –û–±—ã—á–Ω–æ ID –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å '-100'.`);
}

const bot = new Telegraf(BOT_TOKEN);
const openai = new OpenAI({ apiKey: OPENAI_API_KEY });

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –±–æ—Ç–∞
bot.catch((err, ctx) => {
	console.error('–û—à–∏–±–∫–∞ Telegraf:', err);
	console.error('–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:', JSON.stringify(ctx.update, null, 2));
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ ChatGPT
async function askChatGPT(question) {
	try {
		const response = await openai.chat.completions.create({
			model: "gpt-4",
			messages: [{ role: "user", content: question }],
			max_tokens: 200,
		});

		return response.choices[0].message.content.trim();
	} catch (error) {
		console.error("–û—à–∏–±–∫–∞ ChatGPT:", error);
		return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
	}
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
async function checkBotPermissionsInChannel() {
	try {
		console.log('–ü—Ä–æ–≤–µ—Ä—è—é –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ:', CHANNEL_ID);

		// –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
		if (!bot.telegram.botInfo) {
			console.log('–ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ...');
			const botInfo = await bot.telegram.getMe();
			console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞:', botInfo.username);

			// –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤
			try {
				await bot.telegram.sendMessage(CHANNEL_ID, '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞. –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ, –∑–Ω–∞—á–∏—Ç –±–æ—Ç –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É.', { parse_mode: 'Markdown' });
				console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª');
				return true;
			} catch (msgError) {
				console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', msgError.message);
				return false;
			}
		}

		// –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
		const chatMember = await bot.telegram.getChatMember(CHANNEL_ID, bot.telegram.botInfo.id);
		console.log('–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ:', chatMember.status);
		console.log('–ü—Ä–∞–≤–∞ –±–æ—Ç–∞:', JSON.stringify(chatMember, null, 2));

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –±–æ—Ç–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
		if (chatMember.status !== 'administrator') {
			console.warn('‚ö†Ô∏è –ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π.');
		}

		// –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
		await bot.telegram.sendMessage(CHANNEL_ID, '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞. –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ, –∑–Ω–∞—á–∏—Ç –±–æ—Ç –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É.', { parse_mode: 'Markdown' });
		console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª');

		return true;
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –±–æ—Ç–∞:', error.message);
		return false;
	}
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
bot.start((ctx) => {
	console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);
	ctx.reply("–ü—Ä–∏–≤–µ—Ç! –ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å, –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –æ—Ç–≤–µ—Ç –≤ –∫–∞–Ω–∞–ª.");
});

// –ü—Ä–æ—Å—Ç–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
bot.command('test', (ctx) => {
	console.log('–ü–æ–ª—É—á–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);
	ctx.reply("–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç.");
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /status
bot.command('status', async (ctx) => {
	console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /status –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);
	ctx.reply("–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª—É...");

	try {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
		const webhookInfo = await bot.telegram.getWebhookInfo();

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –≤ –∫–∞–Ω–∞–ª–µ
		const channelAccess = await checkBotPermissionsInChannel();

		const statusMessage = `
–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:
- Webhook URL: ${webhookInfo.url || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}
- Webhook –∞–∫—Ç–∏–≤–µ–Ω: ${webhookInfo.url ? '–¥–∞' : '–Ω–µ—Ç'}
- –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É: ${channelAccess ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}
- ID –∫–∞–Ω–∞–ª–∞: ${CHANNEL_ID}
- –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: ${process.env.NODE_ENV === 'production' ? 'Production (webhook)' : 'Development (polling)'}
`;

		ctx.reply(statusMessage);
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', error);
		ctx.reply(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: ${error.message}`);
	}
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ID –∫–∞–Ω–∞–ª–∞
bot.command('channel', async (ctx) => {
	console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /channel –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);
	ctx.reply(`–¢–µ–∫—É—â–∏–π ID –∫–∞–Ω–∞–ª–∞: ${CHANNEL_ID}`);

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞
	if (ctx.from.id.toString() === process.env.ADMIN_ID) {
		ctx.reply("–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞. –ß—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å ID –∫–∞–Ω–∞–ª–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /setchannel ID_–ö–ê–ù–ê–õ–ê");
	}
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–≤–æ–≥–æ ID –∫–∞–Ω–∞–ª–∞
bot.command('setchannel', async (ctx) => {
	console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /setchannel –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞
	if (ctx.from.id.toString() !== process.env.ADMIN_ID) {
		ctx.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è ID –∫–∞–Ω–∞–ª–∞.");
		return;
	}

	const args = ctx.message.text.split(' ');
	if (args.length < 2) {
		ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞. –ü—Ä–∏–º–µ—Ä: /setchannel -1001234567890");
		return;
	}

	const newChannelId = args[1];
	ctx.reply(`–ü—ã—Ç–∞—é—Å—å –æ–±–Ω–æ–≤–∏—Ç—å ID –∫–∞–Ω–∞–ª–∞ –Ω–∞: ${newChannelId}`);

	try {
		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
		await bot.telegram.sendMessage(
			newChannelId,
			'–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É.',
			{ parse_mode: 'Markdown' }
		);

		ctx.reply(`‚úÖ –î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É ${newChannelId} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é CHANNEL_ID –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Railway.`);
	} catch (error) {
		ctx.reply(`‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É ${newChannelId}: ${error.message}`);
	}
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (ctx) => {
	console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', JSON.stringify(ctx.message));
	if (ctx.message.text && ctx.message.text.startsWith('/')) {
		console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞:', ctx.message.text);
	}
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ –∫–æ–º–∞–Ω–¥)
bot.on("text", async (ctx) => {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π
	if (ctx.message.text.startsWith('/')) {
		return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã, –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—ã—à–µ
	}

	console.log('–ü–æ–ª—É—á–µ–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id, '–¢–µ–∫—Å—Ç:', ctx.message.text);
	const question = ctx.message.text;
	ctx.reply("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...");

	const answer = await askChatGPT(question);
	console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç ChatGPT:', answer.substring(0, 50) + '...');

	try {
		console.log('–ü—ã—Ç–∞—é—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª:', CHANNEL_ID);
		await bot.telegram.sendMessage(
			CHANNEL_ID,
			`‚ùì *–í–æ–ø—Ä–æ—Å:* ${question}\n\nüí° *–û—Ç–≤–µ—Ç:* ${answer}`,
			{ parse_mode: "Markdown" }
		);
		console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª');
		ctx.reply("–û—Ç–≤–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ!");
	} catch (error) {
		console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª:", error);
		ctx.reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞: " + error.message);
	}
});

// –°–æ–∑–¥–∞–Ω–∏–µ Express-—Å–µ—Ä–≤–µ—Ä–∞ (–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å Railway –∞–∫—Ç–∏–≤–Ω—ã–º)
const app = express();
app.use(express.json());

// Webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
app.post(`/webhook/${BOT_TOKEN}`, (req, res) => {
	console.log('–ü–æ–ª—É—á–µ–Ω POST –∑–∞–ø—Ä–æ—Å –∫ webhook:', req.method, req.url);

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ –ø—É—Å—Ç–æ–µ
	if (!req.body || Object.keys(req.body).length === 0) {
		console.log('–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π POST –∑–∞–ø—Ä–æ—Å, –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏');
		return res.sendStatus(200);
	}

	console.log('–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:', JSON.stringify(req.body, null, 2));

	try {
		bot.handleUpdate(req.body);
		res.sendStatus(200);
		console.log('Webhook –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω');
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook –∑–∞–ø—Ä–æ—Å–∞:', error);
		res.sendStatus(500);
	}
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook
app.get(`/webhook/${BOT_TOKEN}`, (req, res) => {
	console.log('–ü–æ–ª—É—á–µ–Ω GET –∑–∞–ø—Ä–æ—Å –∫ webhook:', req.method, req.url);
	// –ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ webhook —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
	res.send('Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç! –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ POST-–∑–∞–ø—Ä–æ—Å—ã.');
});

// –ö–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç (Railway —Ç–µ–ø–µ—Ä—å –Ω–µ –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä)
app.get("/", (req, res) => {
	console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É');
	res.send("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ");
});

// –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app.get("/health", (req, res) => {
	console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è');
	res.status(200).json({ status: 'ok', timestamp: new Date().toISOString() });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ Express
app.listen(PORT, async () => {
	console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≤ –∫–∞–∫–æ–π —Å—Ä–µ–¥–µ –∑–∞–ø—É—â–µ–Ω –±–æ—Ç
	const isProduction = process.env.NODE_ENV === 'production';
	console.log(`–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: ${isProduction ? 'Production (webhook)' : 'Development (polling)'}`);

	if (isProduction) {
		// –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π Webhook –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
		try {
			await bot.telegram.deleteWebhook();
			console.log("‚úÖ –°—Ç–∞—Ä—ã–π Webhook —É–¥–∞–ª—ë–Ω");
		} catch (error) {
			console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook:", error.message);
		}

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π Webhook
		try {
			await bot.telegram.setWebhook(WEBHOOK_URL);
			console.log(`‚úÖ –ù–æ–≤—ã–π Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${WEBHOOK_URL}`);

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
			const webhookInfo = await bot.telegram.getWebhookInfo();
			console.log("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:", JSON.stringify(webhookInfo, null, 2));

			// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
			const botInfo = await bot.telegram.getMe();
			console.log("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:", JSON.stringify(botInfo, null, 2));

			// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
			await checkBotPermissionsInChannel();
		} catch (error) {
			console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Webhook:", error.message);
		}
	} else {
		// –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º long polling
		try {
			await bot.telegram.deleteWebhook();
			console.log("‚úÖ Webhook —É–¥–∞–ª—ë–Ω –¥–ª—è —Ä–µ–∂–∏–º–∞ polling");

			// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling
			bot.launch();
			console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling");

			// –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã –±–æ—Ç —É—Å–ø–µ–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è
			setTimeout(async () => {
				// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
				await checkBotPermissionsInChannel();
			}, 3000);
		} catch (error) {
			console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤ —Ä–µ–∂–∏–º–µ polling:", error.message);
		}
	}
});

// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ Railway (–õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
setInterval(() => {
	console.log("‚úÖ –°–µ—Ä–≤–µ—Ä Railway —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è");

	// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
	try {
		fetch("https://questbot-production.up.railway.app/health")
			.then(response => console.log("Health check —É—Å–ø–µ—à–µ–Ω:", response.status))
			.catch(error => console.error("–û—à–∏–±–∫–∞ health check:", error));
	} catch (error) {
		console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ health check:", error);
	}
}, 1000 * 60 * 5); // –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

// –î–æ–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–∏–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –±–æ–ª–µ–µ —á–∞—Å—Ç—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
setInterval(() => {
	// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
	console.log("‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏");

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
	bot.telegram.getWebhookInfo()
		.then(info => {
			if (!info.url || info.url !== WEBHOOK_URL) {
				console.log("‚ö†Ô∏è Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...");
				return bot.telegram.setWebhook(WEBHOOK_URL);
			}
			return Promise.resolve();
		})
		.then(() => console.log("‚úÖ Webhook –ø—Ä–æ–≤–µ—Ä–µ–Ω"))
		.catch(error => console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ webhook:", error));
}, 1000 * 60 * 10); // –ö–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
process.on('uncaughtException', (error) => {
	console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –ø—Ä–æ–º–∏—Å–æ–≤
process.on('unhandledRejection', (reason, promise) => {
	console.error('‚ùå –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', reason);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGTERM', () => {
	console.log('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...');
	// –£–¥–∞–ª—è–µ–º webhook –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º
	bot.telegram.deleteWebhook()
		.then(() => console.log('Webhook —É–¥–∞–ª–µ–Ω –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º'))
		.catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook:', error))
		.finally(() => process.exit(0));
});

process.on('SIGINT', () => {
	console.log('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...');
	// –£–¥–∞–ª—è–µ–º webhook –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º
	bot.telegram.deleteWebhook()
		.then(() => console.log('Webhook —É–¥–∞–ª–µ–Ω –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º'))
		.catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook:', error))
		.finally(() => process.exit(0));
});
